CREATE SCHEMA IF NOT EXISTS xtremand_production;

-- Enum Types
CREATE TYPE xtremand_production.campaign_type AS ENUM ('EMAIL_ONLY', 'WHATSAPP_ONLY', 'EMAIL_AND_WHATSAPP');
CREATE TYPE xtremand_production.email_campaign_type AS ENUM ('COLD_OUTREACH', 'FOLLOW_UP', 'INTRODUCTION', 'NETWORKING', 'SALES_PITCH', 'PARTNERSHIP');
CREATE TYPE xtremand_production.email_category AS ENUM ('WELCOME', 'FOLLOW_UP', 'PROMOTION', 'NEWSLETTER', 'COLD_OUTREACH', 'NURTURE', 'GENERAL');
CREATE TYPE xtremand_production.email_status AS ENUM ('SENT', 'NOT_SENT', 'OPENED', 'CLICKED', 'BOUNCED', 'REPLIED');
CREATE TYPE xtremand_production.lockout_event_type AS ENUM ('SUCCESS', 'FAILURE');
CREATE TYPE xtremand_production.role_name AS ENUM ('SUPER_ADMIN', 'ADMIN', 'TEAM_MEMBER');
CREATE TYPE xtremand_production.tone AS ENUM ('PROFESSIONAL', 'CASUAL', 'FRIENDLY', 'FORMAL', 'ENTHUSIASTIC');

-- Tables
CREATE TABLE xtremand_production.xt_roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name xtremand_production.role_name NOT NULL,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    CONSTRAINT uk_xt_roles_name UNIQUE (name)
);

CREATE INDEX idx_xt_roles_created_at ON xtremand_production.xt_roles (created_at);
CREATE INDEX idx_xt_roles_updated_at ON xtremand_production.xt_roles (updated_at);

CREATE TABLE xtremand_production.xt_users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(255),
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role_id BIGINT,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    CONSTRAINT fk_xt_users_role FOREIGN KEY (role_id) REFERENCES xtremand_production.xt_roles(id),
    CONSTRAINT uk_xt_users_email UNIQUE (email)
);

CREATE INDEX idx_xt_users_email ON xtremand_production.xt_users (email);
CREATE INDEX idx_xt_users_role_id ON xtremand_production.xt_users (role_id);
CREATE INDEX idx_xt_users_created_at ON xtremand_production.xt_users (created_at);
CREATE INDEX idx_xt_users_updated_at ON xtremand_production.xt_users (updated_at);

INSERT INTO xtremand_production.xt_roles (name) VALUES ('SUPER_ADMIN'), ('ADMIN'), ('TEAM_MEMBER');

CREATE TABLE xtremand_production.oauth_clients (
    client_id VARCHAR(128) PRIMARY KEY,
    client_secret VARCHAR(256),
    client_name VARCHAR(256),
    grant_types VARCHAR(256),
    redirect_uris TEXT,
    scopes VARCHAR(256),
    access_token_validity INT,
    refresh_token_validity INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE xtremand_production.oauth_authorization_codes (
    code VARCHAR(256) PRIMARY KEY,
    client_id VARCHAR(128),
    user_id UUID,
    redirect_uri TEXT,
    scopes VARCHAR(256),
    expires_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE xtremand_production.oauth_access_tokens (
    token_id UUID PRIMARY KEY,
    client_id VARCHAR(128),
    user_id UUID,
    access_token TEXT,
    refresh_token TEXT,
    scopes VARCHAR(256),
    issued_at TIMESTAMP,
    expires_at TIMESTAMP,
    revoked BOOLEAN DEFAULT FALSE
);

CREATE TABLE xtremand_production.oauth_refresh_tokens (
    token_id UUID PRIMARY KEY,
    access_token_id UUID REFERENCES xtremand_production.oauth_access_tokens(token_id),
    refresh_token TEXT,
    issued_at TIMESTAMP,
    expires_at TIMESTAMP,
    revoked BOOLEAN DEFAULT FALSE
);

CREATE TABLE xtremand_production.xt_contact_list (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(255),
    created_at DATE,
    updated_at DATE
);

CREATE TABLE xtremand_production.xt_contacts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at DATE,
    created_by VARCHAR(255),
    updated_at DATE,
    updated_by VARCHAR(255),
    details VARCHAR(255),
    company VARCHAR(255),
    email VARCHAR(255),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    job_title VARCHAR(255),
    location VARCHAR(255),
    phone VARCHAR(255),
    tags VARCHAR(255),
    is_active BOOLEAN
);

CREATE TABLE xtremand_production.xt_contacts_contact_list (
    contact_list_id BIGINT NOT NULL,
    contact_id BIGINT NOT NULL,
    PRIMARY KEY (contact_list_id, contact_id),
    CONSTRAINT fk_contact_list FOREIGN KEY (contact_list_id) REFERENCES xtremand_production.xt_contact_list(id),
    CONSTRAINT fk_contact FOREIGN KEY (contact_id) REFERENCES xtremand_production.xt_contacts(id)
);

CREATE TABLE xtremand_production.email_templates (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    category xtremand_production.email_category,
    subject_line VARCHAR(255),
    content TEXT,
    variables VARCHAR(255)
);

CREATE TABLE xtremand_production.xt_campaign (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    type xtremand_production.campaign_type,
    content_strategy VARCHAR(255),
    scheduled_at TIMESTAMP,
    ai_personalization BOOLEAN,
    created_at DATE,
    is_sent BOOLEAN DEFAULT FALSE,
    contact_list_id BIGINT,
    email_template_id BIGINT,
    CONSTRAINT fk_contact_list FOREIGN KEY (contact_list_id) REFERENCES xtremand_production.xt_contact_list(id),
    CONSTRAINT fk_email_template FOREIGN KEY (email_template_id) REFERENCES xtremand_production.email_templates(id)
);

CREATE TABLE xtremand_production.email_analytics (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contact_id BIGINT,
    email VARCHAR(255),
    subject VARCHAR(255),
    status xtremand_production.email_status,
    sent_at TIMESTAMP,
    opened_at TIMESTAMP,
    clicked_at TIMESTAMP,
    bounced_at TIMESTAMP,
    replied_at TIMESTAMP,
    tracking_id UUID,
    tracking_url VARCHAR(255),
    campaign_id BIGINT NOT NULL,
    CONSTRAINT fk_campaign FOREIGN KEY (campaign_id) REFERENCES xtremand_production.xt_campaign(id)
);

CREATE TABLE xtremand_production.xt_lockout_events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    event_type xtremand_production.lockout_event_type NOT NULL,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    created_by VARCHAR(255),
    updated_by VARCHAR(255)
);

CREATE INDEX idx_xt_lockout_events_email ON xtremand_production.xt_lockout_events (email);
